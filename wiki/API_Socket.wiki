#summary Module "socket"

= Socket module =

Defined in file `socket.so` or `socket.dll`. 

Classes: *Socket*.

  * Constants:
    * Socket.PF_INET
    * Socket.PF_INET6
    * Socket.PF_UNIX
    * Socket.SOCK_STREAM
    * Socket.SOCK_DGRAM
    * Socket.SOCK_RAW
    * Socket.IPPROTO_TCP
    * Socket.IPPROTO_UDP
    * Socket.SO_REUSEADDR
    * Socket.SO_BROADCAST
    * Socket.SO_KEEPALIVE

  * `Socket.getProtoByName()` - convert protocol name to number
  * `Socket.getAddrInfo(name, [family])` - convert hostname to address
  * `Socket.getNameInfo(addr, family)` - convert address to cname
  * `Socket.getHostName()` - return current hostname

  * `var sock = new Socket(family, type, proto)` - create new socket
  * `sock.connect(address, [port])` - connect to target `address`
  * `sock.bind(address, [port])` - bind to target `address`
  * `sock.listen([backlog])` - listen for incoming connections
  * `var sock2 = sock.accept()` - accept a new connection
  * `sock.send(data, [address], [port])` - send `data` to socket
  * `sock.receive(num, [binary])` - retrieve max `num` bytes from socket. If `binary` is true, data is returned as an array of bytes.
  * `sock.getPeerName()` - returns array with peer address components
  * `sock.getOption(name, [length])` - returns a value of `SO_*` option
  * `sock.setOption(name, value)` - sets a `value` of `SO_*` option
  * `sock.close()` - close a socket